% ltt_demo2.m
% demonstrates ltt on dataset 2 "three-level-binary"
% Copyright (C) 2006 - 2009 by Stefan Harmeling (2009-06-26).
close all
clear
opt.verbose = 1;  % for demonstrations
dataset = 2;
msg = sprintf('%d "THREE-LEVEL-BINARY", which is generated by the\n', dataset);
msg = sprintf('%sfollowing tree structure:\n', msg);
msg = sprintf('%s\n', msg');
msg = sprintf('%s%s\n', msg, '               7        ');
msg = sprintf('%s%s\n', msg, '             /   \      ');
msg = sprintf('%s%s\n', msg, '           5       6    ');
msg = sprintf('%s%s\n', msg, '          / \     / \   ');
msg = sprintf('%s%s\n', msg, '         1   2   3   4  ');
msg = sprintf('%s\n', msg);
msg = sprintf('%sThe leaf variables x1, x2, x3 and x4 have eight states.  The inner nodes x5 and x6\n', msg);
msg = sprintf('%shave four states, and the root has two states.  The root state is selected by\n', msg);
msg = sprintf('%sa fair coin flip.  For each state that a parent node can take on, there\n', msg);
msg = sprintf('%sare two possible states for a child, selected with a fair coin flip.\n', msg);
msg = sprintf('%sFor more details on the CPTs please take a look at "create_tree.m".\n', msg);

msg_final = sprintf('Note that the correct solution has been found.\n');

% (0) introduction
clc
fprintf('[%s.m] starting demonstration\n', mfilename);
ltt_demo_helper
